import{p as n}from"./vendor.e0316d72.js";const l=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const h of s)if(h.type==="childList")for(const r of h.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const h={};return s.integrity&&(h.integrity=s.integrity),s.referrerpolicy&&(h.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?h.credentials="include":s.crossorigin==="anonymous"?h.credentials="omit":h.credentials="same-origin",h}function i(s){if(s.ep)return;s.ep=!0;const h=t(s);fetch(s.href,h)}};l();class d extends n.exports.Scene{constructor(){super("MainHud")}create(){this.createHudContainer(),this.createInfo(),this.createDelayText(),this.createPausedText()}createHudContainer(){this.container=this.add.group()}createInfo(){this.container.add(this.add.text(10,10,"Click on screen to add/remove cells")),this.container.add(this.add.text(10,30,"Press [RIGHT] key to advance one iteration")),this.container.add(this.add.text(10,50,"Press [SPACE] to play simulation")),this.container.add(this.add.text(10,70,"Press [UP] or [DOWN] key to increase/decrease delay")),this.container.add(this.add.text(10,90,"Press [i] key to show/hide info"))}createDelayText(){this.delayText=this.add.text(0,0,"Delay:      "),this.delayText.setPosition(this.game.canvas.width-this.delayText.displayWidth-4,30),this.container.add(this.delayText)}createPausedText(){this.pausedText=this.add.text(this.game.canvas.width,10,"- paused -"),this.pausedText.setPosition(this.game.canvas.width-this.pausedText.displayWidth-4,10),this.container.add(this.pausedText)}setPaused(e){this.pausedText&&this.pausedText.setText(e?"- paused -":"")}setDelay(e){this.delayText&&this.delayText.setText(`Delay: ${e}`)}toggleVisible(){this.container.toggleVisible()}}class o{constructor(e,t,i){this.color=16777215,this.neighbors=[],this.nextState=!1,this.scene=e,this.x=t,this.y=i,this.alive=!1,this.createCellGraphics(),this.checkColor()}createCellGraphics(){this.shape=this.scene.add.rectangle(this.x,this.y,8,8,this.color,1).setOrigin(0),this.shape.setInteractive(),this.shape.on("pointerdown",()=>{this.setAlive(!this.alive)}),this.shape.on("pointermove",e=>{e.isDown&&this.setAlive(!0)})}checkColor(){this.alive?this.shape.setFillStyle(this.color,1):this.shape.setFillStyle(this.color,0)}setAlive(e){this.alive=e,this.checkColor()}isAlive(){return this.alive}checkNextState(){const e=this.neighbors.filter(t=>t.isAlive());this.alive?e.length===2||e.length===3?this.nextState=!0:this.nextState=!1:e.length===3?this.nextState=!0:this.nextState=!1}changeState(){this.setAlive(this.nextState)}addNeighbor(e){this.neighbors.push(e)}}class c{constructor(e,t,i){this.cellSize=8,this.scene=e,this.width=t/this.cellSize,this.height=i/this.cellSize,this.createCells(),this.setNeighbors()}changeState(){this.checkCellsState(),this.changeCellsState()}createCells(){this.cells=[];for(let e=0;e<this.height;e++){this.cells[e]=[];for(let t=0;t<this.width;t++){const i=t*this.cellSize,s=e*this.cellSize;this.cells[e][t]=new o(this.scene,i,s)}}}setNeighbors(){this.iterateCells((e,t,i)=>{t-1>=0&&i-1>=0&&t+1<this.height&&i+1<this.width&&(e.addNeighbor(this.cells[t-1][i-1]),e.addNeighbor(this.cells[t-1][i]),e.addNeighbor(this.cells[t-1][i+1]),e.addNeighbor(this.cells[t][i-1]),e.addNeighbor(this.cells[t][i+1]),e.addNeighbor(this.cells[t+1][i-1]),e.addNeighbor(this.cells[t+1][i]),e.addNeighbor(this.cells[t+1][i+1]))})}checkCellsState(){this.iterateCells(e=>{e.checkNextState()})}changeCellsState(){this.iterateCells(e=>{e.changeState()})}iterateCells(e){for(let t=0;t<this.height;t++)for(let i=0;i<this.width;i++){const s=this.cells[t][i];e(s,t,i)}}}class u extends n.exports.Scene{constructor(){super("MainScene");this.timerDelay=300}create(){this.createWorld(),this.createHud(),this.createTimer(),this.createInputs()}createWorld(){this.world=new c(this,this.game.canvas.width,this.game.canvas.height)}createHud(){this.scene.run("MainHud"),this.hud=this.scene.get("MainHud"),this.hud.setPaused(!0),this.hud.setDelay(this.timerDelay)}createInputs(){const e=this.input.keyboard.addKey("right");e.onDown=()=>{this.world.changeState()};const t=this.input.keyboard.addKey("up");t.onDown=()=>{this.timerDelay+=10,this.resetTimer(),this.hud.setDelay(this.timerDelay)};const i=this.input.keyboard.addKey("down");i.onDown=()=>{this.timerDelay-=10,this.resetTimer(),this.hud.setDelay(this.timerDelay)};const s=this.input.keyboard.addKey("space");s.onDown=()=>{this.timer.paused=!this.timer.paused,this.hud.setPaused(this.timer.paused),this.hud.setDelay(this.timerDelay)};const h=this.input.keyboard.addKey("i");h.onDown=()=>{this.hud.toggleVisible()}}createTimer(){this.timer=this.time.addEvent({repeat:-1,delay:this.timerDelay,callback:()=>{this.world.changeState()},paused:!0})}resetTimer(){Object.defineProperty(this.timer,"delay",{value:this.timerDelay})}}new n.exports.Game({width:window.innerWidth,height:window.innerHeight,render:{pixelArt:!0},scene:[u,d]});
